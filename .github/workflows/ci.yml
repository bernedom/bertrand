name: CI

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  ci:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        name:
          [ubuntu-gcc-7, ubuntu-clang-9, macos-appleclang-11, windows-msvc-19]
        include:
          - name: ubuntu-gcc-7
            os: ubuntu-18.04
            compiler: g++-7

          - name: ubuntu-clang-9
            os: ubuntu-18.04
            compiler: clang++-9

          - name: macos-appleclang-11
            os: macos-latest

          - name: windows-msvc-19
            os: windows-latest

    steps:
      - uses: actions/checkout@v1
      - name: dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt install shunit2 ninja-build python3-setuptools python3-pip -y
          sudo pip3 install conan

      - name: dependecies (macos)
        if: runner.os == 'macOS'
        run: brew install shunit2 ninja conan

      # - name: dependencies (windows)
      #   if: runner.os == 'Windows'

      - name: set-compiler-env
        run: |
          if [ "${{ matrix.compiler }}" != "" ]; then
            echo "CXX=${{ matrix.compiler }}" >> $GITHUB_ENV
          fi
        shell: bash

      - name: make-build-dir
        run: mkdir build
      - name: cmake-configure-debug
        run: cmake -DCMAKE_BUILD_TYPE=Debug ..
        working-directory: ./build
      - name: build-debug
        run: cmake --build ./build --config Debug
      - name: ctest
        run: ctest -C Debug
        working-directory: ./build

      - name: cmake-configure-release
        run: cmake -B build -DCMAKE_BUILD_TYPE=Release
      - name: build-release
        run: cmake --build ./build --config Release

      - name: program-termination-tests
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: ./test/test-program-termination.sh

  installation-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: ./.github/actions/installation-tests
        with:
          script: ./test/installation-tests.sh
        id: installation-tests

  deploy-to-conan:
    needs: [ci, installation-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: dbgprint
        run: echo ${{ github.ref }}
      - name: publish-unstable-to-bintray
        if: github.event.action != 'published' && github.ref == 'refs/heads/main'
        uses: ./.github/actions/deploy-conan-to-bintray
        with:
          conan_package: bertrand
          conan_channel: bertrand/unstable
          conan_remote: "https://api.bintray.com/conan/bernedom/conan"
          conan_user: ${{secrets.CONAN_LOGIN_USERNAME}}
          conan_pass: ${{secrets.CONAN_PASSWORD}}
        id: conan-deploy
      - name: publish-stable-to-bintray
        if: github.event.action == 'published'
        uses: ./.github/actions/deploy-conan-to-bintray
        with:
          conan_package: bertrand
          conan_channel: bertrand/stable
          conan_remote: "https://api.bintray.com/conan/bernedom/conan"
          conan_user: ${{secrets.CONAN_LOGIN_USERNAME}}
          conan_pass: ${{secrets.CONAN_PASSWORD}}
        id: conan-deploy-stable
